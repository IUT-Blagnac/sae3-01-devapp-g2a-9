CREATE OR REPLACE PROCEDURE AjouterPanier
	(
		p_idProd  	 Produit.idproduit%TYPE,
		p_quant      Panier.quantite%TYPE,
		p_user		 Panier.emailuser%TYPE
	)
IS
BEGIN
	INSERT INTO Panier (emailuser, idproduit, quantite)
	VALUES (p_user, p_idProd, p_quant);
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('Article ajouté au panier');
EXCEPTION
	WHEN DUP_VAL_ON_INDEX THEN
		DBMS_OUTPUT.PUT_LINE('Cet article est déjà dans le panier');
		UPDATE Panier
		SET quantite = quantite + p_quant
		WHERE idproduit = p_idProd
		AND emailuser = p_user;
END;



-- TRIGGER INSERTION DANS DETAILCOMMANDE VA CHANGE LE MONTANT DE LA COMMANDE


CREATE OR REPLACE TRIGGER t_idu_commande_maj_montant
AFTER INSERT OR DELETE OR UPDATING OF quantite
ON DetailCommande
FOR EACH ROW
DECLARE
	v_idcomm Commande.idcommande%TYPE;
	v_prix Produit.prixproduit%TYPE;
	v_quant DetailCommande.quantite%TYPE;
	v_total_prix_commande Commande.montant%TYPE;
	v_idprod Produit.idproduit%TYPE;
BEGIN
	IF DELETING OR UPDATING THEN
		SELECT prixproduit INTO v_prix
		FROM Produit P
		WHERE P.idproduit = :OLD.idproduit;
		UPDATE Commande
		SET montant = montant - (:OLD.quantite * v_prix)
		WHERE Commande.idcommande = :OLD.idcommande;
	END IF;

	IF INSERTING OR UPDATING THEN 
		-- on supprime et on remet la ligne car quantite varie mais sans suppression
		SELECT prixproduit INTO v_prix
		FROM Produit P
		WHERE P.idproduit = :NEW.idproduit;
		UPDATE Commande
		SET montant = montant + (:NEW.quantite * v_prix)
		WHERE Commande.idcommande = :NEW.idcommande;
	END IF;
END;


-- TRIGGER MAJ DE STOCK