CREATE OR REPLACE PROCEDURE AjouterPanier
	(
		p_idProd  	 Produit.idproduit%TYPE,
		p_quant      Panier.quantite%TYPE,
		p_user		 Panier.emailuser%TYPE
	)
IS
BEGIN
	INSERT INTO Panier (emailuser, idproduit, quantite)
	VALUES (p_user, p_idProd, p_quant);
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('Article ajouté au panier');
EXCEPTION
	WHEN DUP_VAL_ON_INDEX THEN
		DBMS_OUTPUT.PUT_LINE('Cet article est déjà dans le panier');
		UPDATE Panier
		SET quantite = quantite + p_quant
		WHERE idproduit = p_idProd
		AND emailuser = p_user;
END;



-- TRIGGER INSERTION DANS DETAILCOMMANDE VA CHANGE LE MONTANT DE LA COMMANDE


CREATE OR REPLACE TRIGGER t_idu_commande_maj_montant
AFTER INSERT OR DELETE OR UPDATING OF idproduit, quantite
ON DetailCommande
FOR EACH ROW
DECLARE
	v_idcomm Commande.idcommande%TYPE;
	v_prix Produit.prixproduit%TYPE;
	v_quant_old DetailCommande.quantite%TYPE;
	v_quant_new DetailCommande.quantite%TYPE;
	v_total_prix_commande Commande.montant%TYPE;
BEGIN
	IF (DELETING OR UPDATING) THEN
		-- on met la quantite du produit avant le changement dans une variable
		SELECT :OLD.quantite INTO v_quant_old
		FROM DetailCommande
		WHERE idcommande = ...;
		-- on met la quantite du produit apres le changement dans une variable
		SELECT :NEW.quantite INTO v_quant_new
		FROM DetailCommande
		WHERE idcommande = ...;
		-- on soustrait la nouvelle quantite de l'ancienne quantite si celle-ci est inférieure
		IF 
		SELECT SUM(DetailCommande.quantite) INTO  v_total_prix_commande
		FROM Commande, DetailCommande

	END IF;

	IF (UPDATING) THEN 
		-- on supprime et on remet la ligne car quant varie mais sans suppression


	IF (INSERTING) THEN
		SELECT nome INTO vnome1
		FROM Equipe
		WHERE ne = :OLD.ne1;
		SELECT nome INTO vnome2
		FROM Equipe
		WHERE ne = :OLD.ne2;

		END IF;
	END IF;
END;
